function get_table(){
//Function used to get checked in entries to display in table in order to
//Provide additional feedback that sample was successfully checked in

	//Create http request object
	var xmlhttp2;
	
	//if statement used to provide compatibility with older versions of internet explorer
	if(window.XMLHttpRequest){
		xmlhttp2 = new XMLHttpRequest();
	} else {
		xmlhttp2 = new ActiveXObject("Microsoft.XMLHTTP");
	}
	
	//Function to execute only when page responds with valid data
	xmlhttp2.onreadystatechange = function(){
		//readyState == 4 means the request has been sent to the server and the server has finished responding
		//status == 200 means the request was successfully completed
		if(this.readyState == 4 && this.status == 200){
			
			//PHP page written to respond with well formed JSON object
			var rows = JSON.parse(this.responseText);
			
			//.html used to delete current table to allow table to shrink and grow
			$(".checked").html("<tr><th colspan='2'>Previously Checked In Samples</th></tr><tr><th>Batch Number</th><th>Sample Number</th>");
			
			//.append used in the loop to add to the new table generated by .html above
			for(var i = 0; i < rows.length; i++){
				var row = rows[i];
				$('.checked').append("<tr><td>" + row['batch_number'] + "</td><td>" + row['sample_number'] + "</td></tr>");
			}
		}
	}
	xmlhttp2.open("GET", "../lab_php/get_checkedin.php", true);
	xmlhttp2.send();
}

function refocus(){
	$('#hiddenInputField').focus();
}

//JQuery call used to execute function only after page completely loads
$(document).ready(function(){
	get_table();
	
	//Focus on hidden input field (that the scanner writes to) any time page is clicked, in case focus is lost temporarily
	$(document).click(function(){
		$('#hiddenInputField').focus();
	});
	
	//Automatically focus on hidden input field when page loads
	$('#hiddenInputField').focus();
	
	//Function to process "keypresses" made by scanner
	$('#hiddenInputField').keypress(function(event){
		
		//Stops form from submitting when Enter is pressed, automatically placed at end of string by scanner
		if (event.keyCode == 13) { //13 is the ascii code for a Carriage Return(enter)
			event.preventDefault(); //stop form from submitting. 
			//CODE FOR JSON DECODE AND AJAX PUSH GOES HERE
			
			//Pull scanned string out of hidden input when scan is complete
			var scan = $('#hiddenInputField').val();
			
			//Create http request object
			var xmlhttp;
			if(window.XMLHttpRequest){
				xmlhttp = new XMLHttpRequest();
			} else {
				xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
			}
			
			//Function to be executed when page responds with valid data
			xmlhttp.onreadystatechange = function() {
				if(this.readyState == 4 && this.status == 200){
					
					//PHP written to respond with valid string to show on screen once processing of data is done
					alert(this.responseText);
					
					//Reload table so operators can see sample checked in
					get_table();
				}
			}
			xmlhttp.open("GET", "../lab_php/check_in.php?allinfo=" + scan, true);
			xmlhttp.send();
			
			//Reset hidden inputs value to empty string for next scan
			$('#hiddenInputField').val('');
		}

	});

});